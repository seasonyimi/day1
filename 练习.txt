求根公式练习：
def quadratic(a,b,c):
    x1 = (-b+math.sqrt(b**2-4*a*c))/(2*a)
    x2 = (-b-math.sqrt(b**2-4*a*c))/(2*a)
    return x1,x2

print('quadratic(2,3,1)=',quadratic(2,3,1))
print('quadratic(1,3,-4)=',quadratic(1,3,-4))

if quadratic(2,3,1) != (-0.5,-1.0):
    print("测试失败")
elif quadratic(1,3,-4) != (1.0,-4.0):
    print("测试失败")
else:
    print("测试成功")

参数变与不变：
'''python函数在定义的时候，默认参数L的值被计算出来，即[]
   因为默认参数L也是一个变量。它指向对象[]
   每次调用该函数，如果改变了L的内容，则下次调用时，默认参数的内容就变了，不再是函数定义的[]
   改成L=None就成
'''
def add_end(L=[]):
    L.append('END')
    return L
print(add_end())
print(add_end([1,2,3]))
print(add_end(['x','y','z']))
print(add_end())
print(add_end())
# 注意可变参数
def add_end1(N=None):
    if N is None:
        N = []
        N.append('END')
        return N

print(add_end1())
print(add_end1([1,2,3,4]))
print(add_end1())

# 可变参数
def calc(*numbers):
    sum = 0
    for n in numbers:
        sum = sum + n*n
    return sum
print(calc(1,2,3))
print(calc(1,3,5,7))



# 关键字参数
# 扩展函数功能
def person(name,age,**kw):
    print('name:',name,'age:',age,'other:',kw)
    return name
extra = {'city':'Beijing','job':'Engineer'}
# kw获得dict是extra的一份拷贝，对kw的改动不影响函数外的extra
print(person('Michael',30,**extra))