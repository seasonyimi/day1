python是跨平台的
TAB缩进---这个很重要，不对齐会报错、
CTRL+C  强制结束
区分大小写
1.变量包括字母、数字、下划线、不能以数字开头
2.单引号和双引号，字符。\转义符号
例如let's go  加双引号直接引，单引号’前面加\
存在\，需要转义，最前面加r,例如输入str=r'c:\now\today'
输入一段话如：
我在那
我在地球
好的
str="""我在那
我在地球
好的"""         要打三对引号并且使文字处于中间，可进行换行多段输出
3.基本类型
         数字：  int   float double  short long bool（True False）(and or not布尔运算符)    complex(复数,如36j)
	type()可查看是什么类型  type(2/2) float型    type(2//2)  int型，//保留整数部分
         进制： 二进制  八进制0o   十进制0b   十六进制0x
	任意进制转化成2进制  bin()
	任意进制转化成10进制  int()
	任意进制转化成16进制  hex()
	任意进制转化成8进制    oct()
         str字符串
	单引号、双引号、三引号（可换行）
	eg: 'hello'报错 'hello\world'可以换行
         转义字符
	\n换行            \r回车   \'单引号           \t横向制表符
	想全部加\，如输入路径时，最前面加r/R，如 r'c:\nor\b'    
         字符串的运算
	截取一段字符'hello world'[0:5]或'hello world'[0:-6]   结果：hello
	'hello world'[-6:]  结果：world
         列表
	[[a,b],[c,d]]嵌套分组
         元组tuple
	（1，-1，True）
	如何定义一个数的元组（1，）
	算长度  len()
	算大小 min()  max()  eg:min('abcde') 结果：a
	ord()可对字母算到一个ascll码所以可比大小
         集合set{}    无序的,不重复的
	求两集合差集  {1,2,3,4,5}-{3,4}={1,2,5}   求两集合交集 {1,2,3}&{3,4}={3}   求两集合并集{1,2,3}|{3,4}={1,2,3,4}
	定义一个空的集合  set()
         dict字典   不能重复，key重复不会报错，留最后一个，数字不会
	KEY索引     VALUE关键字     如：{'a':'apple','b':'banana'}['a']  结果：apple
	type({})   表示字典类型	
变量和运算符
   变量（有意义的值）
	eg：a=[1,2,3,4,5,6]   b=[1,2,3]  实现a*3+b+a      
        命名规范： 变量包括字母、数字、下划线、不能以数字开头，不能用系统关键字
        赋值   
	情况1：  a=1
	              b=a
                              a=3
                              print(b)       结果：1
	情况2： a=[1,2,3,4,5,6]
	             b=a
    	             a[0]='1'
	             print(b)                  结果：['1', 2, 3, 4, 5, 6]
	int str tuple（不可改变）值类型    list set dict（可变）引用类型
	不可变改变值用id看内存地址，内存地址是发生改变的，引用类型位置不变
        给列表加值
	eg：a=[1,2,3] 
	       a.append(4) 
	       print(a)                 结果：[1,2,3,4]
        复合元组找数
	eg：a=(1,2,3,[1,2,4])
	       a[3][2]=4
    运算符
	算数运算符+ - / *   //    %得余数     **次方
	比较（关系）运算符          ==   !=   <   >   >=    <=
	逻辑运算符       and   or  not      eg:not '0'=False这里0代表字符串   not 0=True   
		返回能确认情况的值eg:[0] and [1] 返回0  [1] and [0]返回0
		and优先级大于or
	成员运算符       in     not in
	身份运算符       is     is not     如果两个变量值一样，is正确为true
		==是比较值是否相等     is需要两边变量身份（内存地址）完全一致
	类型type判断
	a=1 type(a)==int或者isinstance(a,int)  结果 true	
	位运算符          &（按位与）  |（按位或）   ^（按位异或）   -（按位取反）  <<（左移动）    >>（右移动）   
	赋值运算符       =   +=   *=   /=   %=   **=    //=	

 python无法实现
写操作系统，手机应用
空值
空值在python中是一个特殊的值，用none表示，none不可以理解成0，因为0有意义。而none是一个特殊的空值

大写的变量名表示常量

文件时候是用UTF-8编码，记事本打开是Unicode


test,append(?) 追加元素到末尾
test.insert(位置，内容） 插入指定位置
test.pop(?) 删除指定位置内容，不指定则删除末尾
给指定位置重赋值：
>>> classmates
['jack', 'Bob', 'Tracy']
>>> classmates[1]='rose'
>>> classmates
['jack', 'rose', 'Tracy']

tuple元组----一旦初始化不能修改，指每个元素的指向不变，比如元组里list，list里有变量，这样元组的值是会变的
元组只有一个元素时，t=(1,)，防止误解成数学计算意义上的括号

if elif for的用法
for i in range(10):
    age=random.randint(1,100)
    if age >= 60:
        print("你可以退休了")
    elif age >= 50:
        print("你还有十年退休")
    elif age >=40:
        print("你还有二十年退休")
    elif age >=18:
        print("快工作了")
    elif age >=7:
        print("小学了快起来")
		
		
input
# input可以获取输入的值，但返回数据类型是str，需要转化才能比较
s = input('birth: ')
birth = int(s)
if birth < 2000:
    print("你老了")
else:
    print("00后")
	
break
提前退出循环

continue
跳过当前循环。直接开始下一次循环
n = 0
while n < 10 :
    n = n + 1
    if n % 2 == 0:
        continue
    print(n)
		
# 必选参数在前，默认参数在后，否则报错
# 如果有多个参数，按变化大小从左往右写
def power(x=1,n=3,b=5):
    s=1
    while n > 0:
        n=n-1
        s= s*x-b
    return s
print(power())





